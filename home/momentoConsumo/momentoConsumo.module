<?php
/**
 * @file Momentos de Consumo
 * @author Miguel Martínez <miguel01amd@gmail.com>
 * @package Recetario | Custom
 * @info Módulo para sección Momentos de Consumo
 * @vertion dev 1.0.0
 */


/*
 * Implements hook_permission().
 */
function momentoConsumo_permission() {
  $perm = array(
    'administer momentoConsumo' => array(
      'title'       => t('administer momentoConsumo module'),
      'description' => t('Administer content of momentoConsumo module'),
    ),
    'view momentoConsumo'      => array(
      'title'       => t('view momentoConsumo'),
      'description' => t('Permit viewer block momentoConsumo'),
    ),
  );
  return $perm;
}

/**
 * Implements hook_block_info().
 */
function momentoConsumo_block_info() {
  $blocks = array();
  $blocks['momentoConsumo_block'] = array(
    'info'       => t('Momentos de Consumo'),
    'weight'     => 1,
    'status'     => TRUE,
    'region'     => 'home',
    'cache'      => DRUPAL_NO_CACHE,
    'visibility' => BLOCK_VISIBILITY_LISTED,
    'pages'      => '<front>',
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function momentoConsumo_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'momentoConsumo_block':
      if(user_access('view momentoConsumo')){
        $block['content'] = momentoConsumo_get_content();
      }else{
        $block['content'] = t('Not access view content');
      }
    break;
  }//end switch
  return $block;
}

/**
 * Implements hook_theme().
 */
function momentoConsumo_theme() {
  $theme = [];
  $theme['momentoConsumo_block']  = [ 'template' => 'templates/template-momentoConsumo',  ];

  return $theme;
}

/**
 * Devuelve el contenido de la sección Comodines.
 * @return array
 */
function momentoConsumo_get_content() {
  $content = $ids = $nonids = [];
  global $base_url;

  $moment = common_get_moment();

  if ( isset($_COOKIE['recetas']) ) {
    $nonids = json_decode($_COOKIE['recetas'], true);
  }

  $qry = db_select('node', 'n');
  $qry->innerJoin('field_data_field_img_min', 'fim', 'fim.entity_id = n.nid');
  $qry->innerJoin('field_data_field_moment', 'fm', 'fm.entity_id = n.nid');
  $qry->condition('type', 'receipes', '=')
      ->condition('status', '1', '=')
      ->condition('fm.field_moment_tid', $moment['tid'], '=');
  if ( !empty($nonids)) {
    foreach ($nonids as $nid) {
      $qry->condition('n.nid', $nid, '!=');
    }
  }
  $qry->fields('n', ['nid', 'title'])
      ->fields('fim', ['field_img_min_fid']);
  $qry->orderBy('n.changed', 'ASC');
  $qry->range(0,5);
  $results = $qry->execute()->fetchAll();

  if (isset($results) && !empty($results)) {
    foreach ($results as $result) {
      $content[$result->nid] = [
        'title'  => $result->title,
        'img'    => common_file_path($result->field_img_min_fid),
        'moment' => $moment['name'],
        'class'  => $moment['class'],
        'link'   => '/'.recipes_get_alias($result->nid)
      ];
      $ids[] = $result->nid;
    }//end foreach
    $cookie_recetas = momentoConsumo_get_recipeCookies($ids);
    if ( empty($cookie_recetas) ) {
      setcookie( 'recetas', json_encode($cookie_recetas), strtotime( '+1 days' ) );
    }

    return theme('momentoConsumo_block', array('content' => $content));
  }//end if
}

/**
 * Verifica los nids en las cookies y los agrega/elimina.
 * @return array
 */
function momentoConsumo_get_recipeCookies($ids) {
  $data = [];
  if ( isset($_COOKIE['recetas']) ) {
    $data = json_decode($_COOKIE['recetas'], true);
  }

  $i = 0;
  if (empty($ids)) {
    return $data;
  } // end if

  foreach ($ids as $nid) {
    if (in_array($nid, $data)) {

    }//enif
    else {
      $data[] = $nid;
    }
  }//endforeach
  $qry = db_select('node', 'n');
  $qry->condition('n.type', 'receipes', '=');
  $qry->condition('n.status', '1', '=');
  $qry->fields('n', ['nid', 'title']);
  $results = $qry->execute()->fetchAll();

  foreach ($results as $value) {
    ++$i;
  }//endforeach
  $totalnids = count($data);

  if ($totalnids == $i) {
    setcookie('recetas', null, strtotime( '-1 days' ) );
    $data = [];
  }//endif

  setcookie( 'recetas', json_encode($data), strtotime( '+1 days' ) );

  return $data;
}
