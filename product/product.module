<?php
/**
 * @file Productos
 * @author Miguel Martínez <miguel01amd@gmail.com>
 * @package Recetario | Custom
 * @info Módulo para la lógica de productos
 * @vertion dev 1.0.0
 */


/**
 * Implements hook_preprocess_HOOK().
 */
function product_process_node(&$variables)
{

  $field_nutritional = (isset($variables['field_nutritional_table']) && count($variables['field_nutritional_table']) > 0)? $variables['field_nutritional_table'] : NULL;


  if ($field_nutritional) {
    foreach ($field_nutritional as $nutritional) {
      if (!isset($nutritional['field_formato_nutricional']['und'][0]['value']) && empty($nutritional['field_formato_nutricional']['und'][0]['value'])){
        continue;
      } // end if

      switch ($nutritional['field_formato_nutricional']['und'][0]['value']) {
        case 'tabla':
          $variables['nutrimental_table'][] = [
            'name' => $nutritional['field_propiedades_alimenticias']['und'][0]['taxonomy_term']->name,
            'quantity' => $nutritional['field_cantidad_de_propiedad']['und'][0]['value'],
            'weight_measure' => $nutritional['field_medida']['und'][0]['taxonomy_term']->name,
          ];
          break;
        case 'badge':
          $variables['nutrimental_badge'][] = [
            'name' => $nutritional['field_propiedades_alimenticias']['und'][0]['taxonomy_term']->name,
            'quantity' => $nutritional['field_cantidad_de_propiedad']['und'][0]['value'],
            'weight_measure' => $nutritional['field_medida']['und'][0]['taxonomy_term']->name,
            'badge_format' => (!empty($nutritional['field_formato_badge']['und'][0]['taxonomy_term']->name))? $nutritional['field_formato_badge']['und'][0]['taxonomy_term']->name : '',
          ];
          break;
        case 'ambos':
          $variables['nutrimental_table'][] = [
            'name' => $nutritional['field_propiedades_alimenticias']['und'][0]['taxonomy_term']->name,
            'quantity' => $nutritional['field_cantidad_de_propiedad']['und'][0]['value'],
            'weight_measure' => $nutritional['field_medida']['und'][0]['taxonomy_term']->name,
          ];

          $variables['nutrimental_badge'][] = [
            'name' => $nutritional['field_propiedades_alimenticias']['und'][0]['taxonomy_term']->name,
            'quantity' => $nutritional['field_cantidad_de_propiedad']['und'][0]['value'],
            'weight_measure' => $nutritional['field_medida']['und'][0]['taxonomy_term']->name,
            'badge_format' => (!empty($nutritional['field_formato_badge']['und'][0]['taxonomy_term']->name))? $nutritional['field_formato_badge']['und'][0]['taxonomy_term']->name : '',
          ];
          break;
      }
    } // end foreach
  } // end if

global $base_url;
$variables['back_link'] = '';
if (isset($variables['field_category']['0']['tid'])
  && !empty($variables['field_category']['0']['tid'])
) {
  $variables['back_link'] = $base_url.'/taxonomy/term/' . (int)$variables['field_category']['0']['tid'];
} // end if

  $variables['categorias'] = [];
  if (isset($variables['field_category']['0']['tid']) && !empty($variables['field_category']['0']['tid'])) {
        $variables['categorias'] = trCommon_get_categorias($variables['field_category']['0']['tid']);
  }//end if

  $variables['relacionados'] = [];
  if (isset($variables['field_receipe_tag']['0']['tid']) && !empty($variables['field_receipe_tag']['0']['tid'])) {
        $variables['relacionados'] = product_get_related($variables['field_receipe_tag']['0']['tid']);
  }//end if

  //Devuelve las imagenes de detalle
  $variables['detail_imgs'] = [];
  if (isset($variables['field_image']) && !empty($variables['field_image'])) {
    foreach ($variables['field_image'] as $key => $item) {
      if (!empty($item['fid'])) {
        $variables['detail_imgs'][$key] = trCommon_file_path($item['fid']);
      }//end if
    }//end foreach
  }//end if
//Devuelve las imagenes del banner
  $variables['imgs_banner'] = [];

  if (isset($variables['field_image_banner']) && !empty($variables['field_image_banner'])) {
    $variables['imgs_banner'] = trCommon_file_path($variables['field_image_banner'][0]['fid']);
  }//end if
  $variables['logo'] = theme_get_setting('logo', 'tiarosa');
}


/**
 * Devuelve los productos relacionados
 * @return array
 */
/**/
function product_get_related($tid){
  $related  = [];
  if (empty($tid)) {
  return $related;
  } // end if
  global $base_url;
  $qryrelated = db_select('field_data_field_receipe_tag', 'fdfct')
                ->condition('fdfct.field_receipe_tag_tid', $tid, '=');
  $qryrelated->fields('fdfct', ['bundle','entity_id']);
  $qryrelated->range(0, 3);
  $qryrelated->orderBy('fdfct.entity_id', 'DESC');
  $resultsrelated = $qryrelated->execute()->fetchAll();

  if (isset($resultsrelated) && !empty($resultsrelated)) {
    foreach ($resultsrelated as $resultrelated) {
      $query_node = db_select('node', 'n')
      ->condition('n.nid', $resultrelated->entity_id, '=');
      $query_node->leftJoin('	field_data_field_img_min', 'fim', 'fim.entity_id = n.nid');
      $query_node->join('field_data_field_description_ec', 'fde', 'fde.entity_id = n.nid');
      $query_node->fields('n', ['nid', 'type', 'title']);
      $query_node->fields('fim', ['field_img_min_fid']);
      $query_node->fields('fde', ['field_description_ec_value']);
      $results = $query_node->execute()->fetchAll();

      if (count($results) > 0) {
        foreach($results as $result) {
          $related[$result->nid] = [
            'type' => $result->type,
            'title' => $result->title,
            'link' => $base_url.'/'.common_get_alias($result->nid),
            'description' => (!empty($result->title))? $result->field_description_ec_value : '',
          ];
          $path_image= (isset($result->field_img_min_fid) && !empty($result->field_img_min_fid))? common_file_path($result->field_img_min_fid) : '';
          $related[$result->nid]['image'] = $path_image;
        } // end foreach
      }//if count
    }//end foreach
  }//end if
    return $related;
}
